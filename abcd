import org.json.JSONArray;
import org.json.JSONObject;
import java.util.List;

public class MySubscriptionModel {
    private boolean showAddMoreColumn = false;  // Controls if the "ADD" button column is visible

    public List<LineItem> getMatchingProductIds(List<LineItem> items) {
        LOG.debug("MySubscriptionModel :: getMatchingProductIds :: Start");

        // Mock JSON data for testing (using traditional string concatenation)
        String jsonData = "["
                + "{\"Revenera Product Category\": \"IPM\", \"Expiration Date\": \"25-10-2024\"},"
                + "{\"Revenera Product Category\": \"IPM\", \"Expiration Date\": \"\"},"
                + "{\"Revenera Product Category\": \"\", \"Expiration Date\": \"01-01-2023\"},"
                + "{\"Revenera Product Category\": \"Non-IPM\", \"Expiration Date\": \"\"}"
                + "]";

        // Parse JSON data
        JSONArray jsonArray = new JSONArray(jsonData);

        items.forEach((curItem) -> {
            try {
                String productLineName = curItem.getProductLine().getName();
                JSONObject matchedItem = null;

                // Look for a matching product category in JSON
                for (int i = 0; i < jsonArray.length(); i++) {
                    JSONObject jsonItem = jsonArray.getJSONObject(i);
                    String category = jsonItem.optString("Revenera Product Category", "");
                    
                    // Match the category with product line name
                    if (category.equals(productLineName)) {
                        matchedItem = jsonItem;
                        break;
                    }
                }

                // Process matched item if found
                if (matchedItem != null) {
                    String reveneraProductCategory = matchedItem.optString("Revenera Product Category", "");
                    String expirationDateStr = matchedItem.optString("Expiration Date", "");

                    // Check if "Revenera Product Category" has a non-empty value and no expiration date
                    boolean hasCategory = reveneraProductCategory != null && !reveneraProductCategory.isEmpty();
                    boolean hasNoExpirationDate = expirationDateStr == null || expirationDateStr.isEmpty();

                    if (hasCategory && hasNoExpirationDate) {
                        // Show "ADD" button if in whitelist and no expiration date
                        curItem.setIsAvailableInWhiteList(true);
                        showAddMoreColumn = true;  // Show "ADD" column if any item is eligible
                        curItem.setStatus("Whitelisted with No Expiration");  // Optional status for display
                    } else {
                        // Hide "ADD" button if no category or expiration date is present
                        curItem.setIsAvailableInWhiteList(false);
                        curItem.setStatus("Not Whitelisted or Has Expiration");
                    }
                } else {
                    curItem.setIsAvailableInWhiteList(false);  // Hide "ADD" button if no match found
                }
            } catch (Exception e) {
                LOG.error("MySubscriptionModel :: getMatchingProductIds :: Error :: {}", e);
            }
        });

        LOG.debug("MySubscriptionModel :: getMatchingProductIds :: End");
        return items;
    }

    // Getter for showAddMoreColumn to be used in frontend template
    public boolean isShowAddMoreColumn() {
        return showAddMoreColumn;
    }
}
Background:

In the my subscriptions component, a subscription must have an expiration date before we display the “Add” button. This prevents a user from purchasing additional subscriptions for products that do not have an expiration date or have not been activated yet.

Requirements:

Have the "Add" button appear for those software subscriptions that offer this to appear even if there is no expire date.

Look at the Revenera Product Category in the whitelist and if there is a value show the Add button, if there is no value in there we do not show the Add button..

The two parts that should show an add button, Smart Ambient Monitor is a 1 year subscription and IPM-OP-SUB3.

